package com.cy45.calendarserver;

import java.io.DataInputStream;
import java.io.DataOutputStream;
import java.io.IOException;
import java.net.ServerSocket;
import java.net.Socket;
import java.util.List;
import java.util.Map;

import com.yc5518.DES.DES;

public class SocketUtils {
	public static void queryEvents() {
		ServerSocket ss = null;
		try {
			ss = new ServerSocket(8098);
		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}

		for (;;) {
			try {
				System.out.println("Server is running...");
				final Socket socket = ss.accept();
				Thread thread = new Thread(new Runnable() {

					@Override
					public void run() {
						try {
							System.out.println(Thread.currentThread().getId());
							DataInputStream in = new DataInputStream(
									socket.getInputStream());
							DataOutputStream out = new DataOutputStream(socket.getOutputStream());
                            
							String message = in.readUTF();
							String result1 = DES.decryptDES(message, "12345678");
							CalendarServer cs = new CalendarServer();
							List<Map<String, String>> l = cs.search(result1);
							String msg = "";
							String str = "";
							if(!l.equals(null)){
								for(Map<String,String> l1: l){
								str = l1.get("participants");
								System.out.println(str + ": OK with it");
								msg = msg + str + "$";
								}
								
								String result2 = DES.encryptDES(msg, "12345678");
								System.out.println("msg:" + result2);
								out.writeUTF(result2);
							}
							in.close();
							
                            out.close();
							socket.close();
							
						} catch (Exception e) {
							e.printStackTrace();
						}
					}
				});
				thread.start();

			} catch (Exception e) {
				e.printStackTrace();
			}
		}
	}
}
